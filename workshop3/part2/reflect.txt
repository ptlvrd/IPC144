///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #3 (P2)
Full Name  : patel vrundaben vijaykumar
Student ID#: 158605220
Email      : vvpatel20@myseneca.ca
Section    : reflection NBB

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

answer1
my code is (1 <= numserving && numserving <= 4 && weight1 == 250) || (5 <= numserving && numserving <= 9 && weight1 == 500) || (10 <= numserving && weight1 == 1000)
a) i used 2 types of relational expression, <=(less than or equal to) which refers to that left is less than or equal to right and ==(equal to) refers to that both operands are equal.
b) i used 2 types of logical expressions , && (and) which refers as that both the operands are true and || (or) which refers to that one of the operand is true.

answer2
for part1 output#9 the logic can be coded into two ways first applying DeMorgan’s Law; !(id3 == id1 || id3 == id2) and second without applying DeMorgan’s Law; (id3 == id1)&&(id3 == id2). In my part1 ouput#9 i used logic code without applying the DeMorgan’s Law;(id3 == id1)&&(id3 == id2) which gives you output as 0 (false).

answer3
the variables in part 2 can be organized in two ways ,firstly;  char type1, type2, type3;
                                                                int weight1, weight2, weight3;
                                                                char cream1, cream2, cream3;
                                                      secondly; char type1;
                                                                char type2;
                                                                char type3;
                                                                int weight1; 
                                                                int weight2; 
                                                                int weight3; 
                                                                char cream1;
                                                                char cream2;
                                                                char cream3;
in the first part the variables are declared into meaningful groups together at once which optimizes the space and brings out a clarity on how data is stored whilein second part the variables are declared one by one which also takes over a lot of space and it is time consuming.